Docker
- open-source platform that automates the deployment
- management of application using contanerization
- allows us to package an application and it all the dependencies into one standard unit known as container.

Docker features:
1. Docker Engine
    - Docker Daemon
    - Docker CLI
    - REST API
2. Dockerfile
  - A file where we mention commands to execute
3. Docker Image
  - Read-only template with all the instructions for create a Docker container
4. Docker Container
  - Runnable instance of the image
5. Docker Volume
  - Mechanism for persisting data generated by Docker container
6. Docker Network
  - Allow containers to communicate with each other with the host machines


Docker Commands

1. Build Image
- docker build .
- docker build -t express-app-img .

2. Run container
- docker run -d -p 3000:3000 --name express-container express-app-img
-d = detach mode
-p = port forwarding

3. Stop container
- docker remove express-container
- docker remove express-container -f

4. Bind mount
For mac
- docker run -v "$(pwd)":/app -d -p 3000:3000 --name express-container express-app-img
-v = volume, it creates anonymous volumes

For windows
- docker run -v %cd%:/app -d -p 3000:3000 --name express-container express-app-img

Switch to docker directory file system from terminal
- docker exec -it express-container bash

If we delete node_modules from local then it will be deleted from docker as well
To prevent this:
- docker run -v "$(pwd)":/app -v /app/node_modules -d -p 3000:3000 --name express-container express-app-img


Read only Mount Volume:
- If we create or delete or update any file in docker then it will impact our same file inside working directory
- so we need to create read only bind mount
- docker run -v "$(pwd)":/app:ro -v /app/node_modules -d -p 3000:3000 --name express-container express-app-img

Delete volume + stop container
- docker remove express-container -fv

Using environment variables with Docker
- docker run -v "$(pwd)":/app:ro -v /app/node_modules --env PORT=4000 -d -p 3000:4000 --name express-container exp-img


What if we want to create multiple environment variables
- we can create a new .env file and pass that file
- docker run -v "$(pwd)":/app:ro -v /app/node_modules --env-file ./.env -d -p 3000:4000 --name express-container exp-img

======================================

Docker Compose
1. Break down command of running a docker container
2. Handle multiple containers
3. Handle dev, test and prod environment

Create docker-compose.yaml

start docker
Command: docker-compose up -d

down docker
Command: docker-compose down

delete anonymous volume as well
Command: docker-compose down -v

